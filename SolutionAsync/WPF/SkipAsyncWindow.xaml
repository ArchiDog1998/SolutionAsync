<Window x:Class="SolutionAsync.WPF.SkipAsyncWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SolutionAsync.WPF" x:Name="Father"
        mc:Ignorable="d" Topmost="True" WindowStartupLocation="CenterScreen"
        Title="Skip Async Window" Height="400" Width="300" MinWidth="220" MinHeight="150">

    <Window.Resources>
        <local:BitmapConverter x:Key="BitmapConverter"/>
        <local:GridSelectedConverter x:Key="GridSelectedConverter"/>

        <Style x:Key="ContentBorder" TargetType="Border">
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Margin" Value="0 3 0 3"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Silver"/>
    </Style>

    <ControlTemplate TargetType="Button" x:Key="CornerButtonTemplate">
        <Border x:Name="ButtonBorder" Style="{StaticResource ContentBorder}" Width="50"
                HorizontalAlignment="Center" VerticalAlignment="Center" Padding="3">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                              Content="{TemplateBinding ContentControl.Content}"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ButtonBorder" Property="Background" Value="AliceBlue" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ButtonBorder" Property="Background" Value="Silver" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Button" x:Key="buttonSytle">
        <Setter Property="Template" Value="{StaticResource CornerButtonTemplate}"/>
        <Setter Property="Margin" Value="0 0 5 0"/>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource buttonSytle}"/>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Border Margin="5 0 5 0" Style="{StaticResource ContentBorder}" CornerRadius="5">
            <DataGrid x:Name="dataGrid" IsReadOnly="False" SelectionMode="Single" CanUserAddRows="False" AutoGenerateColumns="False" BorderThickness="0"
                          RowBackground="Transparent" GridLinesVisibility="None" Background="Transparent"
                   VirtualizingPanel.IsVirtualizing="True" ItemsSource="{Binding ElementName=Father, Path=DataContext, Mode=TwoWay}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Icon" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Source="{Binding Icon, Converter={ StaticResource BitmapConverter}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Category" Binding="{Binding Category}" IsReadOnly="True"/>

                    <DataGridTextColumn Header="Subcategory" Binding="{Binding Subcategory}" IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>
        </Border>



        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Border x:Name="AddButton" Padding="3 0 3 0" MouseDown="AddButton_MouseDown" Width="50"
                            ToolTip="Press your left mouse and drag to the component's param you want to add, then release your button.">
                <TextBlock Text="Add" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=AddButton, Path=IsMouseOver}" Value="True">
                                <Setter Property="Background" Value="AliceBlue" />
                            </DataTrigger>
                        </Style.Triggers>

                        <Setter Property="Background" Value="WhiteSmoke"/>
                        <Setter Property="Margin" Value="0 3 0 3"/>
                        <Setter Property="Padding" Value="4"/>
                        <Setter Property="CornerRadius" Value="3"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="BorderBrush" Value="Silver"/>
                    </Style>
                </Border.Style>
            </Border>

            <Button x:Name="RemoveButton" Margin=" 5 0 5 0" Content="Remove" Click="RemoveButton_Click"  ToolTip="Click to remove the selected item."
                            IsEnabled="{Binding ElementName=dataGrid, Path=SelectedIndex, Converter={StaticResource GridSelectedConverter}}" />

            <Button x:Name="OKButton" Content="OK" Click="OKButton_Click"/>
            <Button x:Name="CancelButton" Content="Cancel" Click="CancelButton_Click"/>
        </StackPanel>
    </Grid>

</Window>
